<?php
/**
 * This file is part of Parser package.
 * 
 * For the full copyright and license information, please view the
 * LICENSE file that was distributed with this source code.
 */
declare(strict_types=1);

namespace Railt\SDL\Parser;

use Railt\Compiler\Parser\Runtime as SchemaParserRuntime;

/**
 * This class has been auto-generated by the Railt\Compiler\Generator
 */
final class SchemaParser extends SchemaParserRuntime
{
    public function __construct()
    {
        $lexer = new \Railt\SDL\Parser\SchemaLexer();

        parent::__construct($lexer, $this->getRules());
    }

    /**
     * @return \Railt\Compiler\Parser\Rule\Rule[]
     */
    public function getRules(): array
    {
        return [
            0 => new \Railt\Compiler\Parser\Rule\OldRepetition(0, 0, 1, ['NamespaceDefinition',], null),
            1 => new \Railt\Compiler\Parser\Rule\OldRepetition(1, 0, -1, ['DocumentImports',], null),
            2 => new \Railt\Compiler\Parser\Rule\OldRepetition(2, 0, -1, ['DocumentDefinitions',], null),
            'Document' => new \Railt\Compiler\Parser\Rule\OldConcatenation('Document', [0,1,2,], '#Document'),
            'DocumentImports' => new \Railt\Compiler\Parser\Rule\OldChoice('DocumentImports', ['ImportDefinition','Invocation',], null),
            'DocumentDefinitions' => new \Railt\Compiler\Parser\Rule\OldChoice('DocumentDefinitions', ['Extension','Definition',], null),
            6 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(6, 'T_NAME', null, true),
            'NameWithoutReserved' => new \Railt\Compiler\Parser\Rule\OldConcatenation('NameWithoutReserved', [6,], '#Name'),
            8 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(8, 'T_NAME', null, true),
            9 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(9, 'T_TRUE', null, true),
            10 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(10, 'T_FALSE', null, true),
            11 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(11, 'T_NULL', null, true),
            12 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(12, 'T_NAMESPACE', null, true),
            13 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(13, 'T_IMPORT', null, true),
            14 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(14, 'T_IMPORT_FROM', null, true),
            15 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(15, 'T_EXTENDS', null, true),
            16 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(16, 'T_IMPLEMENTS', null, true),
            17 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(17, 'T_ON', null, true),
            18 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(18, 'T_TYPE', null, true),
            19 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(19, 'T_ENUM', null, true),
            20 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(20, 'T_UNION', null, true),
            21 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(21, 'T_INPUT_UNION', null, true),
            22 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(22, 'T_INTERFACE', null, true),
            23 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(23, 'T_SCHEMA', null, true),
            24 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(24, 'T_SCALAR', null, true),
            25 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(25, 'T_DIRECTIVE', null, true),
            26 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(26, 'T_INPUT', null, true),
            27 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(27, 'T_EXTEND', null, true),
            28 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(28, 'T_FRAGMENT', null, true),
            29 => new \Railt\Compiler\Parser\Rule\OldChoice(29, [8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,], null),
            'NameWithReserved' => new \Railt\Compiler\Parser\Rule\OldConcatenation('NameWithReserved', [29,], '#Name'),
            31 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(31, 'T_NAME', null, true),
            32 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(32, 'T_NAMESPACE', null, true),
            33 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(33, 'T_IMPORT', null, true),
            34 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(34, 'T_IMPORT_FROM', null, true),
            35 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(35, 'T_EXTENDS', null, true),
            36 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(36, 'T_IMPLEMENTS', null, true),
            37 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(37, 'T_ON', null, true),
            38 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(38, 'T_TYPE', null, true),
            39 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(39, 'T_ENUM', null, true),
            40 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(40, 'T_UNION', null, true),
            41 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(41, 'T_INPUT_UNION', null, true),
            42 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(42, 'T_INTERFACE', null, true),
            43 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(43, 'T_SCHEMA', null, true),
            44 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(44, 'T_SCALAR', null, true),
            45 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(45, 'T_DIRECTIVE', null, true),
            46 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(46, 'T_INPUT', null, true),
            47 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(47, 'T_EXTEND', null, true),
            48 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(48, 'T_FRAGMENT', null, true),
            'NameExceptValues' => new \Railt\Compiler\Parser\Rule\OldChoice('NameExceptValues', [31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,], null),
            50 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(50, 'T_VARIABLE', null, true),
            'Variable' => new \Railt\Compiler\Parser\Rule\OldConcatenation('Variable', [50,], '#Variable'),
            52 => new \Railt\Compiler\Parser\Rule\OldRepetition(52, 0, 1, ['TypeNamespace',], null),
            'TypeName' => new \Railt\Compiler\Parser\Rule\OldConcatenation('TypeName', [52,'NameWithReserved',], '#TypeName'),
            54 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(54, 'T_NAMESPACE_SEPARATOR', null, false),
            55 => new \Railt\Compiler\Parser\Rule\OldConcatenation(55, ['NameWithReserved',54,], '#TypeNamespace'),
            'TypeNamespace' => new \Railt\Compiler\Parser\Rule\OldRepetition('TypeNamespace', 1, -1, [55,], null),
            57 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(57, 'T_FALSE', null, true),
            58 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(58, 'T_TRUE', null, true),
            59 => new \Railt\Compiler\Parser\Rule\OldConcatenation(59, [58,], '#Boolean'),
            'Boolean' => new \Railt\Compiler\Parser\Rule\OldChoice('Boolean', [57,59,], null),
            61 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(61, 'T_NUMBER', null, true),
            'Number' => new \Railt\Compiler\Parser\Rule\OldConcatenation('Number', [61,], '#Number'),
            63 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(63, 'T_BLOCK_STRING', null, true),
            64 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(64, 'T_STRING', null, true),
            65 => new \Railt\Compiler\Parser\Rule\OldConcatenation(65, [64,], '#String'),
            'String' => new \Railt\Compiler\Parser\Rule\OldChoice('String', [63,65,], null),
            67 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(67, 'T_NULL', null, true),
            'Null' => new \Railt\Compiler\Parser\Rule\OldConcatenation('Null', [67,], '#Null'),
            69 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(69, 'T_BRACE_OPEN', null, false),
            70 => new \Railt\Compiler\Parser\Rule\OldRepetition(70, 0, -1, ['__inputPair',], null),
            71 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(71, 'T_BRACE_CLOSE', null, false),
            'Input' => new \Railt\Compiler\Parser\Rule\OldConcatenation('Input', [69,70,71,], '#Input'),
            73 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(73, 'T_COLON', null, false),
            '__inputPair' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__inputPair', ['NameWithReserved',73,'Value',], '#Pair'),
            75 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(75, 'T_BRACKET_OPEN', null, false),
            76 => new \Railt\Compiler\Parser\Rule\OldRepetition(76, 0, -1, ['Value',], null),
            77 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(77, 'T_BRACKET_CLOSE', null, false),
            'List' => new \Railt\Compiler\Parser\Rule\OldConcatenation('List', [75,76,77,], '#List'),
            79 => new \Railt\Compiler\Parser\Rule\OldChoice(79, ['NameWithReserved','Boolean','Number','String','Input','Null','List',], null),
            'Value' => new \Railt\Compiler\Parser\Rule\OldConcatenation('Value', [79,], '#Value'),
            81 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(81, 'T_NAMESPACE', null, false),
            'NamespaceDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('NamespaceDefinition', [81,'TypeName',], '#NamespaceDefinition'),
            83 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(83, 'T_IMPORT', null, false),
            'ImportDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('ImportDefinition', [83,'__importTypeNames','__importDefinitionFrom',], '#ImportDefinition'),
            85 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(85, 'T_AND', null, false),
            86 => new \Railt\Compiler\Parser\Rule\OldConcatenation(86, [85,'TypeName',], null),
            87 => new \Railt\Compiler\Parser\Rule\OldRepetition(87, 0, -1, [86,], null),
            '__importTypeNames' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__importTypeNames', ['TypeName',87,], '#ImportTarget'),
            89 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(89, 'T_IMPORT_FROM', null, false),
            '__importDefinitionFrom' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__importDefinitionFrom', [89,'TypeName',], '#ImportFrom'),
            'Documentation' => new \Railt\Compiler\Parser\Rule\OldConcatenation('Documentation', ['String',], '#Description'),
            92 => new \Railt\Compiler\Parser\Rule\OldConcatenation(92, ['__returnListDefinition',], '#ReturnTypeDefinition'),
            93 => new \Railt\Compiler\Parser\Rule\OldConcatenation(93, ['__returnTypeDefinition',], '#ReturnTypeDefinition'),
            'ReturnTypeDefinition' => new \Railt\Compiler\Parser\Rule\OldChoice('ReturnTypeDefinition', [92,93,], null),
            95 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(95, 'T_NON_NULL', null, true),
            '__returnTypeNonNullModifier' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__returnTypeNonNullModifier', [95,], '#NonNull'),
            97 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(97, 'T_BRACKET_OPEN', null, false),
            98 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(98, 'T_BRACKET_CLOSE', null, false),
            99 => new \Railt\Compiler\Parser\Rule\OldRepetition(99, 0, 1, ['__returnTypeNonNullModifier',], null),
            '__returnListDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__returnListDefinition', [97,'__returnTypeDefinition',98,99,], '#List'),
            101 => new \Railt\Compiler\Parser\Rule\OldRepetition(101, 0, 1, ['__returnTypeDefinitionArguments',], null),
            102 => new \Railt\Compiler\Parser\Rule\OldConcatenation(102, ['TypeName',101,], null),
            103 => new \Railt\Compiler\Parser\Rule\OldChoice(103, [102,'Variable',], null),
            104 => new \Railt\Compiler\Parser\Rule\OldRepetition(104, 0, 1, ['__returnTypeNonNullModifier',], null),
            '__returnTypeDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__returnTypeDefinition', [103,104,], '#Type'),
            106 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(106, 'T_PARENTHESIS_OPEN', null, false),
            107 => new \Railt\Compiler\Parser\Rule\OldRepetition(107, 0, -1, ['ArgumentDefinition',], null),
            108 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(108, 'T_PARENTHESIS_CLOSE', null, false),
            '__returnTypeDefinitionArguments' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__returnTypeDefinitionArguments', [106,107,108,], '#TypeArguments'),
            110 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(110, 'T_IMPLEMENTS', null, false),
            111 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(111, 'T_AND', null, false),
            112 => new \Railt\Compiler\Parser\Rule\OldConcatenation(112, [111,'TypeName',], null),
            113 => new \Railt\Compiler\Parser\Rule\OldRepetition(113, 0, -1, [112,], null),
            'TypeDefinitionImplements' => new \Railt\Compiler\Parser\Rule\OldConcatenation('TypeDefinitionImplements', [110,'TypeName',113,], null),
            115 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(115, 'T_PARENTHESIS_OPEN', null, false),
            116 => new \Railt\Compiler\Parser\Rule\OldRepetition(116, 0, -1, ['__genericArgumentDefinition',], null),
            117 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(117, 'T_PARENTHESIS_CLOSE', null, false),
            'GenericArgumentsDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('GenericArgumentsDefinition', [115,116,117,], null),
            119 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(119, 'T_COLON', null, false),
            '__genericArgumentDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__genericArgumentDefinition', ['Variable',119,'TypeName',], '#GenericArgument'),
            121 => new \Railt\Compiler\Parser\Rule\OldRepetition(121, 0, 1, ['Documentation',], null),
            122 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(122, 'T_COLON', null, false),
            123 => new \Railt\Compiler\Parser\Rule\OldRepetition(123, 0, 1, ['__argumentDefinitionDefaultValue',], null),
            'ArgumentDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('ArgumentDefinition', [121,'NameWithReserved',122,'ReturnTypeDefinition',123,], '#ArgumentDefinition'),
            125 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(125, 'T_EQUAL', null, false),
            '__argumentDefinitionDefaultValue' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__argumentDefinitionDefaultValue', [125,'Value',], null),
            127 => new \Railt\Compiler\Parser\Rule\OldRepetition(127, 0, 1, ['Documentation',], null),
            128 => new \Railt\Compiler\Parser\Rule\OldRepetition(128, 0, 1, ['__fieldDefinitionArguments',], null),
            129 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(129, 'T_COLON', null, false),
            130 => new \Railt\Compiler\Parser\Rule\OldRepetition(130, 0, -1, ['Directive',], null),
            'FieldDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('FieldDefinition', [127,'NameWithReserved',128,129,'ReturnTypeDefinition',130,], '#FieldDefinition'),
            132 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(132, 'T_PARENTHESIS_OPEN', null, false),
            133 => new \Railt\Compiler\Parser\Rule\OldRepetition(133, 0, -1, ['__fieldDefinitionArgument',], null),
            134 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(134, 'T_PARENTHESIS_CLOSE', null, false),
            '__fieldDefinitionArguments' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__fieldDefinitionArguments', [132,133,134,], null),
            136 => new \Railt\Compiler\Parser\Rule\OldRepetition(136, 0, -1, ['Directive',], null),
            '__fieldDefinitionArgument' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__fieldDefinitionArgument', ['ArgumentDefinition',136,], null),
            138 => new \Railt\Compiler\Parser\Rule\OldRepetition(138, 0, 1, ['Documentation',], null),
            'DirectiveDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('DirectiveDefinition', [138,'DirectiveDefinitionBody',], '#DirectiveDefinition'),
            140 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(140, 'T_DIRECTIVE', null, false),
            141 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(141, 'T_DIRECTIVE_AT', null, false),
            142 => new \Railt\Compiler\Parser\Rule\OldRepetition(142, 0, 1, ['__directiveDefinitionArguments',], null),
            143 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(143, 'T_ON', null, false),
            'DirectiveDefinitionBody' => new \Railt\Compiler\Parser\Rule\OldConcatenation('DirectiveDefinitionBody', [140,141,'TypeName',142,143,'__directiveDefinitionLocations',], null),
            145 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(145, 'T_PARENTHESIS_OPEN', null, false),
            146 => new \Railt\Compiler\Parser\Rule\OldRepetition(146, 0, -1, ['__directiveDefinitionArgument',], null),
            147 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(147, 'T_PARENTHESIS_CLOSE', null, false),
            '__directiveDefinitionArguments' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__directiveDefinitionArguments', [145,146,147,], null),
            '__directiveDefinitionArgument' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__directiveDefinitionArgument', ['ArgumentDefinition',], '#DirectiveArgument'),
            150 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(150, 'T_OR', null, false),
            151 => new \Railt\Compiler\Parser\Rule\OldRepetition(151, 0, 1, [150,], null),
            152 => new \Railt\Compiler\Parser\Rule\OldRepetition(152, 1, -1, ['__directiveDefinitionLocation',], null),
            '__directiveDefinitionLocations' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__directiveDefinitionLocations', [151,152,], '#DirectiveLocations'),
            154 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(154, 'T_OR', null, false),
            155 => new \Railt\Compiler\Parser\Rule\OldConcatenation(155, [154,'NameWithReserved',], null),
            156 => new \Railt\Compiler\Parser\Rule\OldRepetition(156, 0, -1, [155,], null),
            '__directiveDefinitionLocation' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__directiveDefinitionLocation', ['NameWithReserved',156,], null),
            158 => new \Railt\Compiler\Parser\Rule\OldRepetition(158, 0, 1, ['Documentation',], null),
            'EnumDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('EnumDefinition', [158,'EnumDefinitionHead','EnumDefinitionBody',], '#EnumDefinition'),
            160 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(160, 'T_ENUM', null, false),
            161 => new \Railt\Compiler\Parser\Rule\OldRepetition(161, 0, -1, ['Directive',], null),
            'EnumDefinitionHead' => new \Railt\Compiler\Parser\Rule\OldConcatenation('EnumDefinitionHead', [160,'TypeName',161,], null),
            163 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(163, 'T_BRACE_OPEN', null, false),
            164 => new \Railt\Compiler\Parser\Rule\OldRepetition(164, 1, -1, ['__enumDefinitionValue',], null),
            165 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(165, 'T_BRACE_CLOSE', null, false),
            'EnumDefinitionBody' => new \Railt\Compiler\Parser\Rule\OldConcatenation('EnumDefinitionBody', [163,164,165,], null),
            167 => new \Railt\Compiler\Parser\Rule\OldRepetition(167, 0, 1, ['Documentation',], null),
            168 => new \Railt\Compiler\Parser\Rule\OldRepetition(168, 0, -1, ['Directive',], null),
            '__enumDefinitionValue' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__enumDefinitionValue', [167,'NameExceptValues',168,], '#EnumValue'),
            170 => new \Railt\Compiler\Parser\Rule\OldRepetition(170, 0, 1, ['Documentation',], null),
            'InputDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('InputDefinition', [170,'InputDefinitionHead','InputDefinitionBody',], '#InputDefinition'),
            172 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(172, 'T_INPUT', null, false),
            173 => new \Railt\Compiler\Parser\Rule\OldRepetition(173, 0, -1, ['Directive',], null),
            'InputDefinitionHead' => new \Railt\Compiler\Parser\Rule\OldConcatenation('InputDefinitionHead', [172,'TypeName',173,], null),
            175 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(175, 'T_BRACE_OPEN', null, false),
            176 => new \Railt\Compiler\Parser\Rule\OldRepetition(176, 0, -1, ['__inputDefinitionField',], null),
            177 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(177, 'T_BRACE_CLOSE', null, false),
            'InputDefinitionBody' => new \Railt\Compiler\Parser\Rule\OldConcatenation('InputDefinitionBody', [175,176,177,], null),
            179 => new \Railt\Compiler\Parser\Rule\OldRepetition(179, 0, -1, ['Directive',], null),
            '__inputDefinitionField' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__inputDefinitionField', ['ArgumentDefinition',179,], '#InputField'),
            181 => new \Railt\Compiler\Parser\Rule\OldRepetition(181, 0, 1, ['Documentation',], null),
            'InterfaceDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('InterfaceDefinition', [181,'InterfaceDefinitionHead','InterfaceDefinitionBody',], '#InterfaceDefinition'),
            183 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(183, 'T_INTERFACE', null, false),
            184 => new \Railt\Compiler\Parser\Rule\OldRepetition(184, 0, 1, ['GenericArgumentsDefinition',], null),
            185 => new \Railt\Compiler\Parser\Rule\OldRepetition(185, 0, 1, ['TypeDefinitionImplements',], null),
            186 => new \Railt\Compiler\Parser\Rule\OldRepetition(186, 0, -1, ['Directive',], null),
            'InterfaceDefinitionHead' => new \Railt\Compiler\Parser\Rule\OldConcatenation('InterfaceDefinitionHead', [183,'TypeName',184,185,186,], null),
            188 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(188, 'T_BRACE_OPEN', null, false),
            189 => new \Railt\Compiler\Parser\Rule\OldRepetition(189, 0, -1, ['FieldDefinition',], null),
            190 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(190, 'T_BRACE_CLOSE', null, false),
            'InterfaceDefinitionBody' => new \Railt\Compiler\Parser\Rule\OldConcatenation('InterfaceDefinitionBody', [188,189,190,], null),
            192 => new \Railt\Compiler\Parser\Rule\OldRepetition(192, 0, 1, ['Documentation',], null),
            'ObjectDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('ObjectDefinition', [192,'ObjectDefinitionHead','ObjectDefinitionBody',], '#ObjectDefinition'),
            194 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(194, 'T_TYPE', null, false),
            195 => new \Railt\Compiler\Parser\Rule\OldRepetition(195, 0, 1, ['GenericArgumentsDefinition',], null),
            196 => new \Railt\Compiler\Parser\Rule\OldRepetition(196, 0, 1, ['TypeDefinitionImplements',], null),
            197 => new \Railt\Compiler\Parser\Rule\OldRepetition(197, 0, -1, ['Directive',], null),
            'ObjectDefinitionHead' => new \Railt\Compiler\Parser\Rule\OldConcatenation('ObjectDefinitionHead', [194,'TypeName',195,196,197,], null),
            199 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(199, 'T_BRACE_OPEN', null, false),
            200 => new \Railt\Compiler\Parser\Rule\OldRepetition(200, 0, -1, ['FieldDefinition',], null),
            201 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(201, 'T_BRACE_CLOSE', null, false),
            'ObjectDefinitionBody' => new \Railt\Compiler\Parser\Rule\OldConcatenation('ObjectDefinitionBody', [199,200,201,], null),
            203 => new \Railt\Compiler\Parser\Rule\OldRepetition(203, 0, 1, ['Documentation',], null),
            'ScalarDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('ScalarDefinition', [203,'ScalarDefinitionBody',], '#ScalarDefinition'),
            205 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(205, 'T_SCALAR', null, false),
            206 => new \Railt\Compiler\Parser\Rule\OldRepetition(206, 0, 1, ['__scalarExtends',], null),
            207 => new \Railt\Compiler\Parser\Rule\OldRepetition(207, 0, -1, ['Directive',], null),
            'ScalarDefinitionBody' => new \Railt\Compiler\Parser\Rule\OldConcatenation('ScalarDefinitionBody', [205,'TypeName',206,207,], null),
            209 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(209, 'T_EXTENDS', null, false),
            '__scalarExtends' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__scalarExtends', [209,'TypeName',], '#Extends'),
            211 => new \Railt\Compiler\Parser\Rule\OldRepetition(211, 0, 1, ['Documentation',], null),
            'SchemaDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('SchemaDefinition', [211,'SchemaDefinitionBody',], '#SchemaDefinition'),
            213 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(213, 'T_SCHEMA', null, false),
            214 => new \Railt\Compiler\Parser\Rule\OldRepetition(214, 0, 1, ['TypeName',], null),
            215 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(215, 'T_BRACE_OPEN', null, false),
            216 => new \Railt\Compiler\Parser\Rule\OldRepetition(216, 0, -1, ['__schemaField',], null),
            217 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(217, 'T_BRACE_CLOSE', null, false),
            'SchemaDefinitionBody' => new \Railt\Compiler\Parser\Rule\OldConcatenation('SchemaDefinitionBody', [213,214,215,216,217,], null),
            219 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(219, 'T_COLON', null, false),
            '__schemaField' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__schemaField', ['NameWithReserved',219,'TypeName',], '#SchemaField'),
            221 => new \Railt\Compiler\Parser\Rule\OldRepetition(221, 0, 1, ['Documentation',], null),
            'UnionDefinition' => new \Railt\Compiler\Parser\Rule\OldConcatenation('UnionDefinition', [221,'UnionDefinitionBody',], '#UnionDefinition'),
            223 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(223, 'T_UNION', null, false),
            224 => new \Railt\Compiler\Parser\Rule\OldRepetition(224, 0, -1, ['Directive',], null),
            225 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(225, 'T_EQUAL', null, false),
            226 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(226, 'T_OR', null, false),
            227 => new \Railt\Compiler\Parser\Rule\OldRepetition(227, 0, 1, [226,], null),
            228 => new \Railt\Compiler\Parser\Rule\OldRepetition(228, 1, -1, ['__unionDefinitionTargets',], null),
            'UnionDefinitionBody' => new \Railt\Compiler\Parser\Rule\OldConcatenation('UnionDefinitionBody', [223,'TypeName',224,225,227,228,], null),
            230 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(230, 'T_OR', null, false),
            231 => new \Railt\Compiler\Parser\Rule\OldConcatenation(231, [230,'TypeName',], null),
            232 => new \Railt\Compiler\Parser\Rule\OldRepetition(232, 0, -1, [231,], null),
            '__unionDefinitionTargets' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__unionDefinitionTargets', ['TypeName',232,], null),
            'Definition' => new \Railt\Compiler\Parser\Rule\OldChoice('Definition', ['DirectiveDefinition','EnumDefinition','InputDefinition','InterfaceDefinition','ObjectDefinition','ScalarDefinition','SchemaDefinition','UnionDefinition',], null),
            235 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(235, 'T_EXTEND', null, false),
            'EnumExtension' => new \Railt\Compiler\Parser\Rule\OldConcatenation('EnumExtension', [235,'__enumExtensionVariants',], '#EnumExtension'),
            237 => new \Railt\Compiler\Parser\Rule\OldConcatenation(237, ['EnumDefinitionHead','EnumDefinitionBody',], null),
            '__enumExtensionVariants' => new \Railt\Compiler\Parser\Rule\OldChoice('__enumExtensionVariants', ['EnumDefinitionHead',237,], null),
            239 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(239, 'T_EXTEND', null, false),
            'InputExtension' => new \Railt\Compiler\Parser\Rule\OldConcatenation('InputExtension', [239,'__inputExtensionVariants',], '#InputExtension'),
            241 => new \Railt\Compiler\Parser\Rule\OldConcatenation(241, ['InputDefinitionHead','InputDefinitionBody',], null),
            '__inputExtensionVariants' => new \Railt\Compiler\Parser\Rule\OldChoice('__inputExtensionVariants', ['InputDefinitionHead',241,], null),
            243 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(243, 'T_EXTEND', null, false),
            'InterfaceExtension' => new \Railt\Compiler\Parser\Rule\OldConcatenation('InterfaceExtension', [243,'__interfaceExtensionVariants',], '#InterfaceExtension'),
            245 => new \Railt\Compiler\Parser\Rule\OldConcatenation(245, ['InterfaceDefinitionHead','InterfaceDefinitionBody',], null),
            '__interfaceExtensionVariants' => new \Railt\Compiler\Parser\Rule\OldChoice('__interfaceExtensionVariants', ['InterfaceDefinitionHead',245,], null),
            247 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(247, 'T_EXTEND', null, false),
            'ObjectExtension' => new \Railt\Compiler\Parser\Rule\OldConcatenation('ObjectExtension', [247,'__objectExtensionVariants',], '#ObjectExtension'),
            249 => new \Railt\Compiler\Parser\Rule\OldConcatenation(249, ['ObjectDefinitionHead','ObjectDefinitionBody',], null),
            '__objectExtensionVariants' => new \Railt\Compiler\Parser\Rule\OldChoice('__objectExtensionVariants', ['ObjectDefinitionHead',249,], null),
            251 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(251, 'T_EXTEND', null, false),
            'ScalarExtension' => new \Railt\Compiler\Parser\Rule\OldConcatenation('ScalarExtension', [251,'ScalarDefinitionBody',], '#ScalarExtension'),
            253 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(253, 'T_EXTEND', null, false),
            'SchemaExtension' => new \Railt\Compiler\Parser\Rule\OldConcatenation('SchemaExtension', [253,'SchemaDefinitionBody',], '#SchemaExtension'),
            255 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(255, 'T_EXTEND', null, false),
            'UnionExtension' => new \Railt\Compiler\Parser\Rule\OldConcatenation('UnionExtension', [255,'UnionDefinitionBody',], '#UnionExtension'),
            'Extension' => new \Railt\Compiler\Parser\Rule\OldChoice('Extension', ['EnumExtension','InputExtension','InterfaceExtension','ObjectExtension','ScalarExtension','SchemaExtension','UnionExtension',], null),
            258 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(258, 'T_COLON', null, false),
            'ArgumentInvocation' => new \Railt\Compiler\Parser\Rule\OldConcatenation('ArgumentInvocation', ['NameWithReserved',258,'Value',], null),
            260 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(260, 'T_DIRECTIVE_AT', null, false),
            261 => new \Railt\Compiler\Parser\Rule\OldRepetition(261, 0, 1, ['__directiveInvocationArguments',], null),
            'Directive' => new \Railt\Compiler\Parser\Rule\OldConcatenation('Directive', [260,'TypeName',261,], '#Directive'),
            263 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(263, 'T_PARENTHESIS_OPEN', null, false),
            264 => new \Railt\Compiler\Parser\Rule\OldRepetition(264, 0, -1, ['__directiveInvocationArgument',], null),
            265 => new \Railt\Compiler\Parser\Rule\OldTokenTerminal(265, 'T_PARENTHESIS_CLOSE', null, false),
            '__directiveInvocationArguments' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__directiveInvocationArguments', [263,264,265,], null),
            '__directiveInvocationArgument' => new \Railt\Compiler\Parser\Rule\OldConcatenation('__directiveInvocationArgument', ['ArgumentInvocation',], '#DirectiveArgument'),
            'Invocation' => new \Railt\Compiler\Parser\Rule\OldConcatenation('Invocation', ['Directive',], null),
                    ];
    }

    /**
     * @return string Returns the lexer compilation date and time in RFC3339 format
     */
    public function getBuiltDate(): string
    {
        return '2018-03-28MSK21:58:15.687+03:00';
    }
}
